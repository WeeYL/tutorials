

body {
  background-color: gray;
}

*{
  box-sizing: border-box;
}
@mixin clear-fix {
  &::after {
    content:"";
    display: table;
    clear: both;
  }
}
@mixin pinkBox {
  font-size: 20px;
  border: 1px solid red;
  background-color: rgba(255, 200, 200, 0.5);
  width: 300px;
  height: 300px;
  display: inline-block;
 
}

@mixin blueBox {
  display: inline-block;
  font-size: 20px;
  border: 1px solid blue;
  background-color: rgba(124, 114, 233, 0.5);
  width: 100px;
  height: 100px;
 }

.container-block {
  display: block;
  background-color: white;
  border: 1px dotted black;
}

// Position
* {
  box-sizing: border-box;
}

.box {
  display: inline-block;
  width: 100px;
  height: 100px;
  background: red;
  color: white;
}

#rel {
  @include blueBox;
  position: relative;
  top: 40px;
  left: 20px;
}
#abs {
  @include blueBox;
  position: absolute;
  top: 40px;
  left: 20px;
}
#fix {
  @include blueBox;
  position: fixed;
  top: 40px;
  left: 200px;
}
#sticky {
  @include blueBox;
  position: sticky;
  top:10px;
  left: 200px;
}
#one {
  @include blueBox;
  background-color: red

}
#three {
  @include blueBox;
  background-color: red;

}

// margin

#margin-box{
@include pinkBox();
  position: relative;
  display: block;
}

// parent rel + child rel > no good
#margin {
  @include blueBox;
  position: relative; 
  margin: 100%; // movement = move down 50% + move down by content height 
  font-size: 16px;



}

// parent rel + child abs > good
#no-margin {
  @include blueBox;
  position: absolute;
  font-size: 16px;
  left: 50%; // left margin edge in relation to parent
  top: 50%; // right margin edge in relation to parent
  transform: translate(-50%,-50%)

}




// block inline inline-block


.inline {
  // follows alongside next element
  position: relative;
  color: white;
  font-size: 24px;
  border: 3px solid blue;
  height: 50px; // no effect
  width: 50px; // no effect
}
.inlineBlock {
  display: inline-block;
  color: white;
  font-size: 24px;
  border: 3px solid blue;
  height: 50px; 
  width: 50px; //effective
}
.block { // takes whole line
  display: block;
  color: white;
  font-size: 24px;
  border: 3px solid blue;
  height: 50px; 
  width: 50px; 
}

// grid like with float
$gutter-vertical: 10px;
$gutter-horizontal: 10%;

.row {
  position: relative;
  max-width: 100%;
  margin: 0 auto; // center block element
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clear-fix;

  [class^="col-"]{ // all class starting with "col-" floats left
    float:left;
  }

  .col-1-2 {
    background-color: rgb(216, 122, 85);
    width: calc((100% - #{$gutter-horizontal}) / 2);
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  .col-1-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    background-color: rgb(216, 122, 85);
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
}

.parentrelative2{
  background-color: green;

}
.margins {
  font-size: 3rem;
  display: inline-block;
  margin-left: 50%;
}
.z0{
  position: relative;
  background: aquamarine;
  height: 100px;
  width: 100px;
  padding: 1em;
  
  .z2{
    position: absolute;
    z-index: 2;
    margin-top: 20px;
    margin-left: 10px;
    height: 100px;
    width: 100px;
    color: white;
    background-color: blue;

  }
  .z1{
    position: absolute;
    z-index: 1;
   
    margin-left: 40px;
    background-color: red;
    height: 100px;
    width: 100px;
    color: white;

  }
}


