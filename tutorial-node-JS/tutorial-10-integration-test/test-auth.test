const { MyModel: userModel } = require("./model-user");
const { MyModel: genreModel } = require("./model-genre");
const request = require("supertest");
const server = require("./app-vidly");

// setup
let token;
let name;

beforeEach(async () => {
  token = new userModel().generateAuthToken();
  name = "test-auth";
  await genreModel.remove({});
});

function exec() {
  return request(server)
    .post("/genre")
    .set("x-auth-token", token)
    .send({ name });
}

// test genre
describe("POST GENRE", () => {
  it("should return valid token", async () => {
      
    const res = await exec();
    expect(res.status).toBe(200);
  });

  it("should return 401 if no token is provided", async () => {

    token = "";
    const res = await exec();
    expect(res.status).toBe(401);
  });

  it("should return 400 if token is invalid", async () => {

    token = "a";
    const res = await exec();
    expect(res.status).toBe(400);
  });
});
