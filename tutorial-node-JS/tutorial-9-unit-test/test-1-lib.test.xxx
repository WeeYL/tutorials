// https://jestjs.io/docs/using-matchers

const lib = require("./lib");


/* grouping */


// numbers
describe("absolute", () => {
  test("absolute - should be positive if 1", () => {
    const result = lib.absolute(1);
    expect(result).toBe(1);
  });
  test("absolute - should be positive if -1", () => {
    const result = lib.absolute(-1);
    expect(result).toBe(1);
  });
  test("absolute - should be positive if 0", () => {
    const result = lib.absolute(0);
    expect(result).toBe(0);
  });

  //strings
  test("YL", () => {
    const result = lib.greet("YL");
    expect(result).toBe("Welcome YL");
    expect(result).toMatch(/YL/); // reg exp
  });

  // Array
  test("array", () => {
    const res = lib.getCurrencies();
    expect(res).toEqual(expect.arrayContaining(["AUD", "USD", "EUR"])); // array items are rearranged
  });

  // Object
  test("object", () => {
    const res = lib.getProduct(1);
    expect(res).toEqual({ id: 1, price: 10, category: "a" }); // toBe will not work, because not the same memory
    expect(res).toMatchObject({ id: 1, price: 10 }); // important properties
    expect(res).toHaveProperty("id", 1); // only one property
  });

  // exception
  let args = [null,undefined,NaN,"",0,false]
  it("exception", () => {
    args.map(a=>expect(() => lib.registerUser(a)).toThrow()); // return falsy
  });

  it("exception", ()=> {
    expect(lib.registerUser('YL')).toMatchObject({username:'YL'})
    expect(lib.registerUser('YL').id).toBeGreaterThan(0)
})
});

// it("exception", ()=> {
//     const res = ''
// })
