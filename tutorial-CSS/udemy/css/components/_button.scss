.btn-radio {
  &-input {
    opacity: 0;
  }
  &-new-btn {
    position: absolute;
    top: -0.5rem;
    left: 0;
    display: inline-block;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    border: 3px solid green;

    &::after {
      position: absolute;
      top: 50%;
      left: 50%;
      content: "";
      width: 1.5rem;
      height: 1.5rem;
      border-radius: 50%;
      background-color: green;
      transform: translate(-50%, -50%);
      opacity: 0;
    }
  }

  // checked and all its siblings
  &-input:checked ~ &-new-btn::after {
    opacity: 1;
  }
  &-label {
    margin-left: 1.5rem;
    font-size: 2rem;
    cursor: pointer;
  }
}

.btn {
  &:link,
    &:visited // visited is after clicked
  {
    position: relative;
    display: inline-block; // for anchor tags, display needs to be defined for positioning to work
    transition: transform .1s, box-shadow .1s; // declare properties to transform
    margin-top: 1.6rem;
    text-decoration: none;
    padding: 0.6rem;
    border-radius: 1em;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.5);
    font : {
      variant: small-caps;
      size: 2.4rem;
    }
    &:hover {
      transform: translateY(-0.5rem); // go down
      box-shadow: 0 1.5rem 2.5rem rgba(0, 0, 0, 0.3);
    }
    &:active {
      // onclick
      transform: translateY(0.5rem); // go down
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 1);
    }

    &::after {
      content: ""; // must set
      height: 100%; // 100% of the parent btn
      width: 100%;
      top: 0;
      left: 0;
      z-index: -1;
      border-radius: 1em;
      position: absolute; // place to relative position of btn
    }

    &:hover::after {
      transform: scale(1.5);
      transition: all 0.7s linear;
      opacity: 0;
    }
  }
}
.btnWhite {
  background-color: white;
  &:hover::after {
    transform: scale(1.5);
    transition: all 0.7s linear;
    background-color: red;
    opacity: 0;
  }
}

.btn-signup {
  &:link,
  &:visited {
    color: $color-primary;
    font-size: $font-size-default;
    text-decoration: none;
    border: 1px $color-primary solid;
    border-radius: 1.5rem;
    padding: 6px;
    box-shadow: $shadow-dark; // active placed after hover to work

    display: inline-block; // inline-block for transform to work
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: white;
    box-shadow: $shadow-light;
    transform: translateY(-10px);
  }
  &:active {
    transition: transform 0.1s;
    box-shadow: $shadow-dark; 
    transform: translateY(0);
  }

}
